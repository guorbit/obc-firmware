--------------------------------------------------------
--! File generated by asn2aadl v2.2-rfb0e0f5: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:False:
--! InputASN1FileChecksum:78d44ae346bb9f332a785956fb8ba71d:dataview/dataview-uniq.asn:
--------------------------------------------------------

package DataView

public

DATA CounterK
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "CounterK";
    TASTE::Position_In_File => [ line => 39 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END CounterK;

DATA IMPLEMENTATION CounterK.impl
END CounterK.impl;

DATA CounterK_Buffer_Max
END CounterK_Buffer_Max;

DATA IMPLEMENTATION CounterK_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type CounterK
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END CounterK_Buffer_Max.impl;

DATA CounterK_Buffer
END CounterK_Buffer;

DATA IMPLEMENTATION CounterK_Buffer.impl
    -- Buffer to hold a marshalled data of type CounterK
SUBCOMPONENTS
    Buffer : data CounterK_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END CounterK_Buffer.impl;

DATA Deployment_Analogue
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Deployment-Analogue";
    TASTE::Position_In_File => [ line => 52 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END Deployment_Analogue;

DATA IMPLEMENTATION Deployment_Analogue.impl
END Deployment_Analogue.impl;

DATA Deployment_Analogue_Buffer_Max
END Deployment_Analogue_Buffer_Max;

DATA IMPLEMENTATION Deployment_Analogue_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Deployment_Analogue
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Deployment_Analogue_Buffer_Max.impl;

DATA Deployment_Analogue_Buffer
END Deployment_Analogue_Buffer;

DATA IMPLEMENTATION Deployment_Analogue_Buffer.impl
    -- Buffer to hold a marshalled data of type Deployment_Analogue
SUBCOMPONENTS
    Buffer : data Deployment_Analogue_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END Deployment_Analogue_Buffer.impl;

DATA Deployment_Digital
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Deployment-Digital";
    TASTE::Position_In_File => [ line => 51 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END Deployment_Digital;

DATA IMPLEMENTATION Deployment_Digital.impl
END Deployment_Digital.impl;

DATA Deployment_Digital_Buffer_Max
END Deployment_Digital_Buffer_Max;

DATA IMPLEMENTATION Deployment_Digital_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Deployment_Digital
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Deployment_Digital_Buffer_Max.impl;

DATA Deployment_Digital_Buffer
END Deployment_Digital_Buffer;

DATA IMPLEMENTATION Deployment_Digital_Buffer.impl
    -- Buffer to hold a marshalled data of type Deployment_Digital
SUBCOMPONENTS
    Buffer : data Deployment_Digital_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END Deployment_Digital_Buffer.impl;

DATA Latitude_WGS84
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Latitude-WGS84";
    TASTE::Position_In_File => [ line => 43 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END Latitude_WGS84;

DATA IMPLEMENTATION Latitude_WGS84.impl
END Latitude_WGS84.impl;

DATA Latitude_WGS84_Buffer_Max
END Latitude_WGS84_Buffer_Max;

DATA IMPLEMENTATION Latitude_WGS84_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Latitude_WGS84
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Latitude_WGS84_Buffer_Max.impl;

DATA Latitude_WGS84_Buffer
END Latitude_WGS84_Buffer;

DATA IMPLEMENTATION Latitude_WGS84_Buffer.impl
    -- Buffer to hold a marshalled data of type Latitude_WGS84
SUBCOMPONENTS
    Buffer : data Latitude_WGS84_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END Latitude_WGS84_Buffer.impl;

DATA Location
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 26; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Location";
    TASTE::Position_In_File => [ line => 45 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Location;

DATA IMPLEMENTATION Location.impl
END Location.impl;

DATA Location_Buffer_Max
END Location_Buffer_Max;

DATA IMPLEMENTATION Location_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Location
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Location_Buffer_Max.impl;

DATA Location_Buffer
END Location_Buffer;

DATA IMPLEMENTATION Location_Buffer.impl
    -- Buffer to hold a marshalled data of type Location
SUBCOMPONENTS
    Buffer : data Location_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 48 Bytes; -- Size of the buffer in bytes
END Location_Buffer.impl;

DATA Location_Fix_Packet
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 30; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Location-Fix-Packet";
    TASTE::Position_In_File => [ line => 80 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Location_Fix_Packet;

DATA IMPLEMENTATION Location_Fix_Packet.impl
END Location_Fix_Packet.impl;

DATA Location_Fix_Packet_Buffer_Max
END Location_Fix_Packet_Buffer_Max;

DATA IMPLEMENTATION Location_Fix_Packet_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Location_Fix_Packet
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Location_Fix_Packet_Buffer_Max.impl;

DATA Location_Fix_Packet_Buffer
END Location_Fix_Packet_Buffer;

DATA IMPLEMENTATION Location_Fix_Packet_Buffer.impl
    -- Buffer to hold a marshalled data of type Location_Fix_Packet
SUBCOMPONENTS
    Buffer : data Location_Fix_Packet_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 48 Bytes; -- Size of the buffer in bytes
END Location_Fix_Packet_Buffer.impl;

DATA Longitude_WGS84
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Longitude-WGS84";
    TASTE::Position_In_File => [ line => 44 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END Longitude_WGS84;

DATA IMPLEMENTATION Longitude_WGS84.impl
END Longitude_WGS84.impl;

DATA Longitude_WGS84_Buffer_Max
END Longitude_WGS84_Buffer_Max;

DATA IMPLEMENTATION Longitude_WGS84_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Longitude_WGS84
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Longitude_WGS84_Buffer_Max.impl;

DATA Longitude_WGS84_Buffer
END Longitude_WGS84_Buffer;

DATA IMPLEMENTATION Longitude_WGS84_Buffer.impl
    -- Buffer to hold a marshalled data of type Longitude_WGS84
SUBCOMPONENTS
    Buffer : data Longitude_WGS84_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END Longitude_WGS84_Buffer.impl;

DATA Mode_Change_Packet
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 24; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Mode-Change-Packet";
    TASTE::Position_In_File => [ line => 74 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Mode_Change_Packet;

DATA IMPLEMENTATION Mode_Change_Packet.impl
END Mode_Change_Packet.impl;

DATA Mode_Change_Packet_Buffer_Max
END Mode_Change_Packet_Buffer_Max;

DATA IMPLEMENTATION Mode_Change_Packet_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Mode_Change_Packet
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Mode_Change_Packet_Buffer_Max.impl;

DATA Mode_Change_Packet_Buffer
END Mode_Change_Packet_Buffer;

DATA IMPLEMENTATION Mode_Change_Packet_Buffer.impl
    -- Buffer to hold a marshalled data of type Mode_Change_Packet
SUBCOMPONENTS
    Buffer : data Mode_Change_Packet_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
END Mode_Change_Packet_Buffer.impl;

DATA PID
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "System_Dataview";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PID";
    TASTE::Position_In_File => [ line => 115 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END PID;

DATA IMPLEMENTATION PID.impl
END PID.impl;

DATA PID_Buffer_Max
END PID_Buffer_Max;

DATA IMPLEMENTATION PID_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PID
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PID_Buffer_Max.impl;

DATA PID_Buffer
END PID_Buffer;

DATA IMPLEMENTATION PID_Buffer.impl
    -- Buffer to hold a marshalled data of type PID
SUBCOMPONENTS
    Buffer : data PID_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END PID_Buffer.impl;

DATA Subsystem_Address
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Subsystem-Address";
    TASTE::Position_In_File => [ line => 63 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END Subsystem_Address;

DATA IMPLEMENTATION Subsystem_Address.impl
END Subsystem_Address.impl;

DATA Subsystem_Address_Buffer_Max
END Subsystem_Address_Buffer_Max;

DATA IMPLEMENTATION Subsystem_Address_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Subsystem_Address
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Subsystem_Address_Buffer_Max.impl;

DATA Subsystem_Address_Buffer
END Subsystem_Address_Buffer;

DATA IMPLEMENTATION Subsystem_Address_Buffer.impl
    -- Buffer to hold a marshalled data of type Subsystem_Address
SUBCOMPONENTS
    Buffer : data Subsystem_Address_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END Subsystem_Address_Buffer.impl;

DATA System_Mode
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "System-Mode";
    TASTE::Position_In_File => [ line => 54 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END System_Mode;

DATA IMPLEMENTATION System_Mode.impl
END System_Mode.impl;

DATA System_Mode_Buffer_Max
END System_Mode_Buffer_Max;

DATA IMPLEMENTATION System_Mode_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type System_Mode
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END System_Mode_Buffer_Max.impl;

DATA System_Mode_Buffer
END System_Mode_Buffer;

DATA IMPLEMENTATION System_Mode_Buffer.impl
    -- Buffer to hold a marshalled data of type System_Mode
SUBCOMPONENTS
    Buffer : data System_Mode_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END System_Mode_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    TASTE::Position_In_File => [ line => 102 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA IMPLEMENTATION T_Boolean.impl
END T_Boolean.impl;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Boolean_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    TASTE::Position_In_File => [ line => 94 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA IMPLEMENTATION T_Int32.impl
END T_Int32.impl;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Int32_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    TASTE::Position_In_File => [ line => 98 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA IMPLEMENTATION T_Int8.impl
END T_Int8.impl;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Int8_Buffer.impl;

DATA T_Null_Record
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 0; suggested aligned message buffer is...
    Source_Data_Size => 0 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Null-Record";
    TASTE::Position_In_File => [ line => 104 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_Null_Record;

DATA IMPLEMENTATION T_Null_Record.impl
END T_Null_Record.impl;

DATA T_Null_Record_Buffer_Max
END T_Null_Record_Buffer_Max;

DATA IMPLEMENTATION T_Null_Record_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (0); -- Size of the buffer
    Source_Data_Size => 0 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Null_Record_Buffer_Max.impl;

DATA T_Null_Record_Buffer
END T_Null_Record_Buffer;

DATA IMPLEMENTATION T_Null_Record_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
SUBCOMPONENTS
    Buffer : data T_Null_Record_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
END T_Null_Record_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    TASTE::Position_In_File => [ line => 96 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA IMPLEMENTATION T_UInt32.impl
END T_UInt32.impl;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt32_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    TASTE::Position_In_File => [ line => 100 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA IMPLEMENTATION T_UInt8.impl
END T_UInt8.impl;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt8_Buffer.impl;

DATA Temperature_Generic
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Temperature-Generic";
    TASTE::Position_In_File => [ line => 50 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END Temperature_Generic;

DATA IMPLEMENTATION Temperature_Generic.impl
END Temperature_Generic.impl;

DATA Temperature_Generic_Buffer_Max
END Temperature_Generic_Buffer_Max;

DATA IMPLEMENTATION Temperature_Generic_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Temperature_Generic
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Temperature_Generic_Buffer_Max.impl;

DATA Temperature_Generic_Buffer
END Temperature_Generic_Buffer;

DATA IMPLEMENTATION Temperature_Generic_Buffer.impl
    -- Buffer to hold a marshalled data of type Temperature_Generic
SUBCOMPONENTS
    Buffer : data Temperature_Generic_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END Temperature_Generic_Buffer.impl;

DATA Time_UNIX
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "OBC_MODEL_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Time-UNIX";
    TASTE::Position_In_File => [ line => 41 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END Time_UNIX;

DATA IMPLEMENTATION Time_UNIX.impl
END Time_UNIX.impl;

DATA Time_UNIX_Buffer_Max
END Time_UNIX_Buffer_Max;

DATA IMPLEMENTATION Time_UNIX_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Time_UNIX
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Time_UNIX_Buffer_Max.impl;

DATA Time_UNIX_Buffer
END Time_UNIX_Buffer;

DATA IMPLEMENTATION Time_UNIX_Buffer.impl
    -- Buffer to hold a marshalled data of type Time_UNIX
SUBCOMPONENTS
    Buffer : data Time_UNIX_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END Time_UNIX_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   CounterK : DATA CounterK.impl;
   Deployment_Analogue : DATA Deployment_Analogue.impl;
   Deployment_Digital : DATA Deployment_Digital.impl;
   Latitude_WGS84 : DATA Latitude_WGS84.impl;
   Location : DATA Location.impl;
   Location_Fix_Packet : DATA Location_Fix_Packet.impl;
   Longitude_WGS84 : DATA Longitude_WGS84.impl;
   Mode_Change_Packet : DATA Mode_Change_Packet.impl;
   PID : DATA PID.impl;
   Subsystem_Address : DATA Subsystem_Address.impl;
   System_Mode : DATA System_Mode.impl;
   T_Boolean : DATA T_Boolean.impl;
   T_Int32 : DATA T_Int32.impl;
   T_Int8 : DATA T_Int8.impl;
   T_Null_Record : DATA T_Null_Record.impl;
   T_UInt32 : DATA T_UInt32.impl;
   T_UInt8 : DATA T_UInt8.impl;
   Temperature_Generic : DATA Temperature_Generic.impl;
   Time_UNIX : DATA Time_UNIX.impl;
END Taste_DataView.others;
end DataView;
