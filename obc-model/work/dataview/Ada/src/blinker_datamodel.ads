pragma Style_Checks (Off);
--  Code automatically generated by asn1scc tool
pragma Warnings (Off, "no entities of ""Interfaces"" are referenced");
with Interfaces;
pragma Warnings (On, "no entities of ""Interfaces"" are referenced");

pragma Warnings (Off, "use clause for package ""Interfaces"" has no effect");
use Interfaces;
pragma Warnings (On, "use clause for package ""Interfaces"" has no effect");

with adaasn1rtl;


pragma Warnings (Off, "unit ""System"" is not referenced");
with System;
pragma Warnings (On, "unit ""System"" is not referenced");

pragma Warnings (Off, "use clause for package ""adaasn1rtl"" has no effect");
use adaasn1rtl;
pragma Warnings (On, "use clause for package ""adaasn1rtl"" has no effect");

pragma Warnings (Off, "use clause for type");
pragma Warnings (Off, "is already use-visible through package use clause at line");
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
pragma Warnings (On, "use clause for type");
pragma Warnings (On, "is already use-visible through package use clause at line");



package Blinker_Datamodel with SPARK_Mode
is


subtype asn1SccBlinker_States_index_range is Integer range 0..0;
type asn1SccBlinker_States is (asn1Sccwait) with Size => adaasn1rtl.Enumerated_Size;
for asn1SccBlinker_States use
    (asn1Sccwait => 0);

function asn1SccBlinker_States_Equal(val1, val2 : asn1SccBlinker_States) return Boolean;

ERR_BLINKER_STATES:constant Integer := 1; -- wait
function asn1SccBlinker_States_IsConstraintValid(val : asn1SccBlinker_States) return adaasn1rtl.ASN1_RESULT;

function asn1SccBlinker_States_Init  return asn1SccBlinker_States is
(asn1Sccwait);
-- asn1SccBlinker_Context --------------------------------------------

type asn1SccBlinker_Context is record 
    state : asn1SccBlinker_States;
    init_done : adaasn1rtl.Asn1Boolean;
end record;


function asn1SccBlinker_Context_Equal(val1, val2 : asn1SccBlinker_Context) return Boolean;

ERR_BLINKER_CONTEXT:constant Integer := 21; -- 
ERR_BLINKER_CONTEXT_STATE_2:constant Integer := 11; -- 
ERR_BLINKER_CONTEXT_INIT_DONE:constant Integer := 16; -- 
function asn1SccBlinker_Context_IsConstraintValid(val : asn1SccBlinker_Context) return adaasn1rtl.ASN1_RESULT;

function asn1SccBlinker_Context_Init  return asn1SccBlinker_Context is
((state => asn1Sccwait, init_done => False));
pragma Warnings (Off, "there are no others");
 
pragma Warnings (On, "there are no others");
private
   --# hide Blinker_Datamodel;


end Blinker_Datamodel;