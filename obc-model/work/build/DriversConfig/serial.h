#ifndef GENERATED_ASN1SCC_serial_H
#define GENERATED_ASN1SCC_serial_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


typedef enum {
    b9600 = 0,
    b19200 = 1,
    b38400 = 2,
    b57600 = 3,
    b115200 = 4,
    b230400 = 5
} Baudrate_T;

// please use the following macros to avoid breaking code.
#define Baudrate_T_b9600 b9600
#define Baudrate_T_b19200 b19200
#define Baudrate_T_b38400 b38400
#define Baudrate_T_b57600 b57600
#define Baudrate_T_b115200 b115200
#define Baudrate_T_b230400 b230400

#define ERR_BAUDRATE_T		1  /*b9600 | b19200 | b38400 | b57600 | b115200 | b230400*/
flag Baudrate_T_IsConstraintValid(const Baudrate_T* pVal, int* pErrCode);

void Baudrate_T_Initialize(Baudrate_T* pVal);
typedef enum {
    even = 0,
    odd = 1
} Parity_T;

// please use the following macros to avoid breaking code.
#define Parity_T_even even
#define Parity_T_odd odd

#define ERR_PARITY_T		6  /*even | odd*/
flag Parity_T_IsConstraintValid(const Parity_T* pVal, int* pErrCode);

void Parity_T_Initialize(Parity_T* pVal);
/*-- Serial_Conf_T --------------------------------------------*/
typedef char Serial_Conf_T_devname[21];
typedef asn1SccUint Serial_Conf_T_bits;

typedef asn1SccUint Serial_Conf_T_sending_wait;

typedef flag Serial_Conf_T_use_paritybit;

typedef struct {
    unsigned int speed:1;
    unsigned int parity:1;
    unsigned int bits:1;
    unsigned int sending_wait:1;
    unsigned int use_paritybit:1;
} Serial_Conf_T_exist;
typedef struct {
    Serial_Conf_T_devname devname;
    Baudrate_T speed;
    Parity_T parity;
    Serial_Conf_T_bits bits;
    Serial_Conf_T_sending_wait sending_wait;
    Serial_Conf_T_use_paritybit use_paritybit;

    Serial_Conf_T_exist exist;

} Serial_Conf_T;

#define ERR_SERIAL_CONF_T_DEVNAME		11  /*(SIZE (1..20))*/
flag Serial_Conf_T_devname_IsConstraintValid(const Serial_Conf_T_devname val, int* pErrCode);

#define ERR_SERIAL_CONF_T_BITS		36  /*(7 .. 8)*/
flag Serial_Conf_T_bits_IsConstraintValid(const Serial_Conf_T_bits* pVal, int* pErrCode);

#define ERR_SERIAL_CONF_T_SENDING_WAIT		41  /*(0 .. 9000000)*/
flag Serial_Conf_T_sending_wait_IsConstraintValid(const Serial_Conf_T_sending_wait* pVal, int* pErrCode);

#define ERR_SERIAL_CONF_T_USE_PARITYBIT		46  /**/
flag Serial_Conf_T_use_paritybit_IsConstraintValid(const Serial_Conf_T_use_paritybit* pVal, int* pErrCode);

#define ERR_SERIAL_CONF_T		51  /**/
#define ERR_SERIAL_CONF_T_SPEED_2		21  /**/
#define ERR_SERIAL_CONF_T_PARITY_2		31  /**/
flag Serial_Conf_T_IsConstraintValid(const Serial_Conf_T* pVal, int* pErrCode);

void Serial_Conf_T_devname_Initialize(Serial_Conf_T_devname val);
void Serial_Conf_T_bits_Initialize(Serial_Conf_T_bits* pVal);
void Serial_Conf_T_sending_wait_Initialize(Serial_Conf_T_sending_wait* pVal);
void Serial_Conf_T_use_paritybit_Initialize(Serial_Conf_T_use_paritybit* pVal);
void Serial_Conf_T_Initialize(Serial_Conf_T* pVal);

extern const Serial_Conf_T linux_ttyS0;
extern const Serial_Conf_T linux_ttyUSB0;
extern const Serial_Conf_T linux_ttyUSB1;
extern const Serial_Conf_T linux_ttyUSB2;
extern const Serial_Conf_T leon_rasta_apburasta0;
extern const Serial_Conf_T leon_rasta_apburasta1; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
