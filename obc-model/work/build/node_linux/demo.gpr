--  Node name          : demo
--  Execution platform : PLATFORM_NATIVE
project Demo is

   type Build_Type is ("Debug", "Release");
   Build : Build_Type := external ("CFG", "Debug");

   --  following to be updated with all relevant source dirs
   for Source_Dirs use
      ("demo",
       "../deploymentview_final/polyorb-hi-c/src",
       "../deploymentview_final/polyorb-hi-c/include",
       "../../dataview/C",
       "../../dataview/Ada/asn1rtl",
       "../../dataview/Ada/src",
       "../../dataview/Ada/boards/x86", -- Additional tests may be needed if other platforms are used
       "../../gui/GUI/src",
       "../../gui/GUI/wrappers",
       "../../hal/C/src",
       "../../hal/C/wrappers",
       "../../loc_provider/C/src",
       "../../loc_provider/C/wrappers",
       "../../state_handler_entrypoint/SDL/code",
       "../../state_handler_entrypoint/SDL/wrappers",
       "../../tc_provider/C/src",
       "../../tc_provider/C/wrappers",
       "../../tm_collection/C/src",
       "../../tm_collection/C/wrappers",
       "../deploymentview_final/demo")
        & external_as_list("EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("DEMO_EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("ADA_INCLUDE_PATH", ":");

   for Object_Dir use "obj";
   for Exec_Dir   use "../../binaries";

   for Languages use ("Ada", "C", "C++");

   for Main use ("main.c");

   package Naming is
       for Body_Suffix ("C++") use ".cc";
   end Naming;

   --  These files are not needed to use POHIC: don' t compile them
   for Excluded_Source_Files use
      ("config.c",
       "config_leon3_drvmgr.c",
       "config_leon4_n2x.c",
       "grspw_api.c",
       "grspw_pkt_lib.c",
       "po_hi_driver_exarm.c",
       "po_hi_driver_exarm_ni_6071e_analog.c",
       "po_hi_driver_exarm_ni_6071e_digital.c",
       "po_hi_driver_keyboard.c",
       "po_hi_driver_leon_eth.c",
       "po_hi_driver_leon_serial.c",
       "po_hi_driver_rasta_1553_brmlib.c",
       "po_hi_driver_rasta_1553.c",
       "po_hi_driver_rasta_common.c",
       "po_hi_driver_rasta_serial.c",
       "po_hi_driver_rasta_spacewire.c",
       "po_hi_driver_rtems_drvmgr_ethernet.c",
       "po_hi_driver_rtems_drvmgr_serial.c",
       "po_hi_driver_rtems_drvmgr_spacewire.c",
       "po_hi_driver_rtems_ne2000.c",
       "po_hi_driver_stardundee.c",
       "po_hi_driver_usbbrick_spacewire.c",
       "po_hi_driver_xc4v_fpga.c",
       "po_hi_giop.c",
       "po_hi_gprof_rtems_leon.c",
       "po_hi_lua.c",
       "po_hi_simulink.c",
       "po_hi_storage.c",
       "spwrouter_custom_config.c",
       "star_dundee_api.c",
       "trace_manager.c",
       "um_threads.c",
       "cheddar_schedule.cc",
       "remote_configuration.cc");

   package Compiler is
      for Driver ("C") use External ("CC", "gcc");
      for Driver ("C++") use External ("CXX", "g++");
      Common_C_Switches :=
        ("-DTARGET=native",
         "-DPOSIX",
         "-D_POSIX_SOURCE",
         "-D_GNU_SOURCE",
         "-Wall",
         "-Wextra",
         "-fdiagnostics-show-option",
         "-Wcast-align",
         "-fdata-sections",
         "-ffunction-sections",
         "-fdiagnostics-color=always",
         "-Wno-cast-function-type",
         "-Wswitch")
         & External_As_List ("STACK_ANALYSIS_FLAGS", " ")
         & External_As_List ("DEMO_USER_CFLAGS", " ")
         & External_As_List ("USER_CFLAGS", " ");

      Common_Ada_Switches :=
        ("-Wall",
         "-Wextra",
         "-fdata-sections",
         "-ffunction-sections",
         "-gnatd.E")   -- this flag allows to have an IN and IN OUT parameter with the same variable
         & External_As_List ("STACK_ANALYSIS_FLAGS", " ")
         & External_As_List ("DEMO_USER_ADAFLAGS", " ")
         & External_As_List ("USER_ADAFLAGS", " ");

      case Build is
         when "Release" =>
            for Default_Switches ("C")   use Common_C_Switches   & ("-O2", "-DNDEBUG" ,"-Wmissing-prototypes");
            for Default_Switches ("C++") use Common_C_Switches   & ("-O2", "-DNDEBUG");
            for Default_Switches ("Ada") use Common_Ada_Switches & ("-O2", "-DNDEBUG");
         when "Debug" =>
            -- -fcommon is needed for gcc10 otherwise pohic will have link issues
            --  for Default_Switches ("C")   use Common_C_Switches   & ("-g", "-O0", "-D__PO_HI_USE_VCD=1", "-fcommon");
            for Default_Switches ("C")   use
                  Common_C_Switches
               & ("-g",
               "-O0",
               "-fstack-check",
               "-fsanitize=address",
               "-D_FORTIFY_SOURCE=2",
               "-fcommon");
            for Default_Switches ("C++") use
               Common_C_Switches
               & ("-g",
               "-O0",
               "-fstack-check",
               "-fsanitize=address",
               "-D_FORTIFY_SOURCE=2",
               "-fcommon");
            for Default_Switches ("Ada") use
               Common_Ada_Switches
               & ("-g",
               "-O0",
               "-fstack-check");
      end case;
      --  Increase command line size to avoid using --specs and support ccache
      --  Comment the line if you are using an old version of gprbuild, eg. in Debian 9
      for Max_Command_Line_Length use "131072";
   end Compiler;

   package Linker is
      Common_LD_Switches :=
         ("-lrt",
          "-lpthread",
          "-lm",
          "-Wl,-gc-sections")
          & external_as_list("DEMO_USER_LDFLAGS", " ")
          & external_as_list("USER_LDFLAGS", " ");

      case Build is
         when "Release" =>
            for Default_Switches ("C") use Common_LD_Switches;
            for Default_Switches ("C++") use Common_LD_Switches;
         when "Debug" =>
            for Default_Switches ("C") use
                 Common_LD_Switches
                 & ("-g", "-fcommon", "-fstack-check", "-fsanitize=address");
            for Default_Switches ("C++") use
                 Common_LD_Switches
                 & ("-g", "-fcommon", "-fstack-check", "-fsanitize=address");
      end case;
   end Linker;

   package Builder is
      for Executable ("main.c") use "demo";
   end Builder;

end Demo;
