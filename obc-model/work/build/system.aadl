--  TASTE Concurrency View - Generated by Kazoo, do not edit manually
--  Generated by the template: ~/tool-src/kazoo/templates/concurrency_view/aadl_2_threads/system.tmplt

package Gui_Poll_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Gui_Poll
features
   OUTPORT_State_Handler_Entrypoint_Trig_Aoi : out event port;
   OUTPORT_State_Handler_Entrypoint_Trig_Mcp : out event port;
   OUTPORT_State_Handler_Entrypoint_Trig_Pwr : out event port;
end Gui_Poll;

thread implementation Gui_Poll.others
properties
   Activate_Entrypoint_Source_Text => "init_gui";
   Compute_Entrypoint_Source_Text    => "call_gui_poll";
   Dispatch_Protocol                 => Periodic;
   Period                            => 10 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        => 0 Bytes;
   Priority                          =>  1;
end Gui_Poll.others;

end Gui_Poll_Thread;
package Gui_Send_Tm_Aoi_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Gui_Send_Tm_Aoi
features
   INPORT_Send_Tm_Aoi : in event data port DataView::Location_Fix_Packet_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  10;
        Compute_Entrypoint_Source_Text => "call_gui_send_tm_aoi"; };
   OUTPORT_State_Handler_Entrypoint_Trig_Aoi : out event port;
   OUTPORT_State_Handler_Entrypoint_Trig_Mcp : out event port;
   OUTPORT_State_Handler_Entrypoint_Trig_Pwr : out event port;
end Gui_Send_Tm_Aoi;

thread implementation Gui_Send_Tm_Aoi.others
properties
   Activate_Entrypoint_Source_Text => "init_gui";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        => 0 Bytes;
   Priority                          =>  1;
end Gui_Send_Tm_Aoi.others;

end Gui_Send_Tm_Aoi_Thread;
package Gui_Send_Tm_Mcp_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Gui_Send_Tm_Mcp
features
   INPORT_Send_Tm_Mcp : in event data port DataView::Mode_Change_Packet_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  10;
        Compute_Entrypoint_Source_Text => "call_gui_send_tm_mcp"; };
   OUTPORT_State_Handler_Entrypoint_Trig_Aoi : out event port;
   OUTPORT_State_Handler_Entrypoint_Trig_Mcp : out event port;
   OUTPORT_State_Handler_Entrypoint_Trig_Pwr : out event port;
end Gui_Send_Tm_Mcp;

thread implementation Gui_Send_Tm_Mcp.others
properties
   Activate_Entrypoint_Source_Text => "init_gui";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        => 0 Bytes;
   Priority                          =>  1;
end Gui_Send_Tm_Mcp.others;

end Gui_Send_Tm_Mcp_Thread;
package Hal_Blink_Led_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Hal_Blink_Led
end Hal_Blink_Led;

thread implementation Hal_Blink_Led.others
properties
   Activate_Entrypoint_Source_Text => "init_hal";
   Compute_Entrypoint_Source_Text    => "call_hal_blink_led";
   Dispatch_Protocol                 => Periodic;
   Period                            => 2000 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end Hal_Blink_Led.others;

end Hal_Blink_Led_Thread;
package State_Handler_Entrypoint_Poll_Aoi_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread State_Handler_Entrypoint_Poll_Aoi
features
   OUTPORT_Gui_Send_Tm_Aoi : out event data port DataView::Location_Fix_Packet_Buffer.impl;
   OUTPORT_Gui_Send_Tm_Mcp : out event data port DataView::Mode_Change_Packet_Buffer.impl;
end State_Handler_Entrypoint_Poll_Aoi;

thread implementation State_Handler_Entrypoint_Poll_Aoi.others
properties
   Activate_Entrypoint_Source_Text => "init_state_handler_entrypoint";
   Compute_Entrypoint_Source_Text    => "call_state_handler_entrypoint_poll_aoi";
   Dispatch_Protocol                 => Periodic;
   Period                            => 10000 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end State_Handler_Entrypoint_Poll_Aoi.others;

end State_Handler_Entrypoint_Poll_Aoi_Thread;
package State_Handler_Entrypoint_Poll_Mcp_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread State_Handler_Entrypoint_Poll_Mcp
features
   OUTPORT_Gui_Send_Tm_Aoi : out event data port DataView::Location_Fix_Packet_Buffer.impl;
   OUTPORT_Gui_Send_Tm_Mcp : out event data port DataView::Mode_Change_Packet_Buffer.impl;
end State_Handler_Entrypoint_Poll_Mcp;

thread implementation State_Handler_Entrypoint_Poll_Mcp.others
properties
   Activate_Entrypoint_Source_Text => "init_state_handler_entrypoint";
   Compute_Entrypoint_Source_Text    => "call_state_handler_entrypoint_poll_mcp";
   Dispatch_Protocol                 => Periodic;
   Period                            => 5000 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end State_Handler_Entrypoint_Poll_Mcp.others;

end State_Handler_Entrypoint_Poll_Mcp_Thread;
package State_Handler_Entrypoint_Toggle_Pwr_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread State_Handler_Entrypoint_Toggle_Pwr
features
   OUTPORT_Gui_Send_Tm_Aoi : out event data port DataView::Location_Fix_Packet_Buffer.impl;
   OUTPORT_Gui_Send_Tm_Mcp : out event data port DataView::Mode_Change_Packet_Buffer.impl;
end State_Handler_Entrypoint_Toggle_Pwr;

thread implementation State_Handler_Entrypoint_Toggle_Pwr.others
properties
   Activate_Entrypoint_Source_Text => "init_state_handler_entrypoint";
   Compute_Entrypoint_Source_Text    => "call_state_handler_entrypoint_toggle_pwr";
   Dispatch_Protocol                 => Periodic;
   Period                            => 30000 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end State_Handler_Entrypoint_Toggle_Pwr.others;

end State_Handler_Entrypoint_Toggle_Pwr_Thread;
package State_Handler_Entrypoint_Trig_Aoi_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread State_Handler_Entrypoint_Trig_Aoi
features
   INPORT_Trig_Aoi : in event port
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  10;
        Compute_Entrypoint_Source_Text => "call_state_handler_entrypoint_trig_aoi"; };
   OUTPORT_Gui_Send_Tm_Aoi : out event data port DataView::Location_Fix_Packet_Buffer.impl;
   OUTPORT_Gui_Send_Tm_Mcp : out event data port DataView::Mode_Change_Packet_Buffer.impl;
end State_Handler_Entrypoint_Trig_Aoi;

thread implementation State_Handler_Entrypoint_Trig_Aoi.others
properties
   Activate_Entrypoint_Source_Text => "init_state_handler_entrypoint";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end State_Handler_Entrypoint_Trig_Aoi.others;

end State_Handler_Entrypoint_Trig_Aoi_Thread;
package State_Handler_Entrypoint_Trig_Mcp_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread State_Handler_Entrypoint_Trig_Mcp
features
   INPORT_Trig_Mcp : in event port
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  10;
        Compute_Entrypoint_Source_Text => "call_state_handler_entrypoint_trig_mcp"; };
   OUTPORT_Gui_Send_Tm_Aoi : out event data port DataView::Location_Fix_Packet_Buffer.impl;
   OUTPORT_Gui_Send_Tm_Mcp : out event data port DataView::Mode_Change_Packet_Buffer.impl;
end State_Handler_Entrypoint_Trig_Mcp;

thread implementation State_Handler_Entrypoint_Trig_Mcp.others
properties
   Activate_Entrypoint_Source_Text => "init_state_handler_entrypoint";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end State_Handler_Entrypoint_Trig_Mcp.others;

end State_Handler_Entrypoint_Trig_Mcp_Thread;
package State_Handler_Entrypoint_Trig_Pwr_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread State_Handler_Entrypoint_Trig_Pwr
features
   INPORT_Trig_Pwr : in event port
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  10;
        Compute_Entrypoint_Source_Text => "call_state_handler_entrypoint_trig_pwr"; };
   OUTPORT_Gui_Send_Tm_Aoi : out event data port DataView::Location_Fix_Packet_Buffer.impl;
   OUTPORT_Gui_Send_Tm_Mcp : out event data port DataView::Mode_Change_Packet_Buffer.impl;
end State_Handler_Entrypoint_Trig_Pwr;

thread implementation State_Handler_Entrypoint_Trig_Pwr.others
properties
   Activate_Entrypoint_Source_Text => "init_state_handler_entrypoint";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end State_Handler_Entrypoint_Trig_Pwr.others;

end State_Handler_Entrypoint_Trig_Pwr_Thread;

package Process_Package
public
   with arinc653;
   with Deployment;
   with DataView;
   with interfaceview::IV;
   with deploymentview::DV;
   with deploymentview::DV::node_1;
   with deploymentview::DV::node_2;
   with Gui_Poll_Thread;
   with Gui_Send_Tm_Aoi_Thread;
   with Gui_Send_Tm_Mcp_Thread;
   with Hal_Blink_Led_Thread;
   with State_Handler_Entrypoint_Poll_Aoi_Thread;
   with State_Handler_Entrypoint_Poll_Mcp_Thread;
   with State_Handler_Entrypoint_Toggle_Pwr_Thread;
   with State_Handler_Entrypoint_Trig_Aoi_Thread;
   with State_Handler_Entrypoint_Trig_Mcp_Thread;
   with State_Handler_Entrypoint_Trig_Pwr_Thread;
   with Ocarina_Processors_X86;
   with Ocarina_Processors_Msp430;
   with ocarina_buses;

data TASTE_Protected
properties
   Concurrency_Control_Protocol => Protected_Access;
end TASTE_Protected;

data implementation TASTE_Protected.Object
properties
   Concurrency_Control_Protocol => Protected_Access;
end TASTE_Protected.Object;

--  Required by AIR to allow inter-partition communications
subprogram do_ports_polling
properties
   Source_Language => C;
   Source_Name     => "user_ports_polling";
   Source_Text     => ("air_polling.c");
end do_ports_polling;
thread Port_Poller
end    Port_Poller;

thread implementation Port_Poller.i
calls
   Mycalls: {
      P_Spg : subprogram do_ports_polling;
   };
properties
   Dispatch_Protocol => Periodic;
   Period            => 100 ms;
   Deadline          => 100 ms;
end Port_Poller.i;


processor node_1_Board extends ocarina_processors_x86::x86
end node_1_Board;

processor implementation node_1_Board.final extends ocarina_processors_x86::x86.linux
end node_1_Board.final;


process X86_Ground_Station extends DeploymentView::DV::Node_1::X86_Ground_Station
features
   INPORT_send_tm_aoi : in event data port DataView::Location_Fix_Packet_Buffer.impl
      { Queue_Size => 1;};
   INPORT_send_tm_mcp : in event data port DataView::Mode_Change_Packet_Buffer.impl
      { Queue_Size => 1;};
   OUTPORT_state_handler_entrypoint_trig_aoi : out event port
      { Queue_Size => 1;};
   OUTPORT_state_handler_entrypoint_trig_mcp : out event port
      { Queue_Size => 1;};
   OUTPORT_state_handler_entrypoint_trig_pwr : out event port
      { Queue_Size => 1;};
end x86_ground_station;

process implementation X86_Ground_Station.final
subcomponents
   gui_protected : data TASTE_Protected.Object;
   gui_Poll        : thread gui_Poll_Thread::gui_Poll.others;
   gui_send_tm_aoi : thread gui_send_tm_aoi_Thread::gui_send_tm_aoi.others;
   gui_send_tm_mcp : thread gui_send_tm_mcp_Thread::gui_send_tm_mcp.others;
connections
   port INPORT_send_tm_aoi -> gui_send_tm_aoi.INPORT_send_tm_aoi;
   port INPORT_send_tm_mcp -> gui_send_tm_mcp.INPORT_send_tm_mcp;
   port gui_Poll.OUTPORT_state_handler_entrypoint_trig_aoi        -> OUTPORT_state_handler_entrypoint_trig_aoi;
   port gui_send_tm_aoi.OUTPORT_state_handler_entrypoint_trig_aoi -> OUTPORT_state_handler_entrypoint_trig_aoi;
   port gui_send_tm_mcp.OUTPORT_state_handler_entrypoint_trig_aoi -> OUTPORT_state_handler_entrypoint_trig_aoi;
   port gui_Poll.OUTPORT_state_handler_entrypoint_trig_mcp        -> OUTPORT_state_handler_entrypoint_trig_mcp;
   port gui_send_tm_aoi.OUTPORT_state_handler_entrypoint_trig_mcp -> OUTPORT_state_handler_entrypoint_trig_mcp;
   port gui_send_tm_mcp.OUTPORT_state_handler_entrypoint_trig_mcp -> OUTPORT_state_handler_entrypoint_trig_mcp;
   port gui_Poll.OUTPORT_state_handler_entrypoint_trig_pwr        -> OUTPORT_state_handler_entrypoint_trig_pwr;
   port gui_send_tm_aoi.OUTPORT_state_handler_entrypoint_trig_pwr -> OUTPORT_state_handler_entrypoint_trig_pwr;
   port gui_send_tm_mcp.OUTPORT_state_handler_entrypoint_trig_pwr -> OUTPORT_state_handler_entrypoint_trig_pwr;
end X86_Ground_Station.final;
processor node_2_Board extends ocarina_processors_msp430::msp430fr5969
end node_2_Board;

processor implementation node_2_Board.final extends ocarina_processors_msp430::msp430fr5969.freertos
end node_2_Board.final;


process Msp430_Obc extends DeploymentView::DV::Node_2::Msp430_Obc
features
   INPORT_trig_aoi : in event port
      { Queue_Size => 1;};
   INPORT_trig_mcp : in event port
      { Queue_Size => 1;};
   INPORT_trig_pwr : in event port
      { Queue_Size => 1;};
   OUTPORT_gui_send_tm_aoi : out event data port DataView::Location_Fix_Packet_Buffer.impl
      { Queue_Size => 1;};
   OUTPORT_gui_send_tm_mcp : out event data port DataView::Mode_Change_Packet_Buffer.impl
      { Queue_Size => 1;};
end msp430_obc;

process implementation Msp430_Obc.final
subcomponents
   hal_protected : data TASTE_Protected.Object;
   
   state_handler_entrypoint_protected : data TASTE_Protected.Object;
   hal_blink_led                       : thread hal_blink_led_Thread::hal_blink_led.others;
   state_handler_entrypoint_poll_aoi   : thread state_handler_entrypoint_poll_aoi_Thread::state_handler_entrypoint_poll_aoi.others;
   state_handler_entrypoint_poll_mcp   : thread state_handler_entrypoint_poll_mcp_Thread::state_handler_entrypoint_poll_mcp.others;
   state_handler_entrypoint_toggle_pwr : thread state_handler_entrypoint_toggle_pwr_Thread::state_handler_entrypoint_toggle_pwr.others;
   state_handler_entrypoint_trig_aoi   : thread state_handler_entrypoint_trig_aoi_Thread::state_handler_entrypoint_trig_aoi.others;
   state_handler_entrypoint_trig_mcp   : thread state_handler_entrypoint_trig_mcp_Thread::state_handler_entrypoint_trig_mcp.others;
   state_handler_entrypoint_trig_pwr   : thread state_handler_entrypoint_trig_pwr_Thread::state_handler_entrypoint_trig_pwr.others;
connections
   port INPORT_trig_aoi -> state_handler_entrypoint_trig_aoi.INPORT_trig_aoi;
   port INPORT_trig_mcp -> state_handler_entrypoint_trig_mcp.INPORT_trig_mcp;
   port INPORT_trig_pwr -> state_handler_entrypoint_trig_pwr.INPORT_trig_pwr;
   port state_handler_entrypoint_poll_aoi.OUTPORT_gui_send_tm_aoi   -> OUTPORT_gui_send_tm_aoi;
   port state_handler_entrypoint_poll_mcp.OUTPORT_gui_send_tm_aoi   -> OUTPORT_gui_send_tm_aoi;
   port state_handler_entrypoint_toggle_pwr.OUTPORT_gui_send_tm_aoi -> OUTPORT_gui_send_tm_aoi;
   port state_handler_entrypoint_trig_aoi.OUTPORT_gui_send_tm_aoi   -> OUTPORT_gui_send_tm_aoi;
   port state_handler_entrypoint_trig_mcp.OUTPORT_gui_send_tm_aoi   -> OUTPORT_gui_send_tm_aoi;
   port state_handler_entrypoint_trig_pwr.OUTPORT_gui_send_tm_aoi   -> OUTPORT_gui_send_tm_aoi;
   port state_handler_entrypoint_poll_aoi.OUTPORT_gui_send_tm_mcp   -> OUTPORT_gui_send_tm_mcp;
   port state_handler_entrypoint_poll_mcp.OUTPORT_gui_send_tm_mcp   -> OUTPORT_gui_send_tm_mcp;
   port state_handler_entrypoint_toggle_pwr.OUTPORT_gui_send_tm_mcp -> OUTPORT_gui_send_tm_mcp;
   port state_handler_entrypoint_trig_aoi.OUTPORT_gui_send_tm_mcp   -> OUTPORT_gui_send_tm_mcp;
   port state_handler_entrypoint_trig_mcp.OUTPORT_gui_send_tm_mcp   -> OUTPORT_gui_send_tm_mcp;
   port state_handler_entrypoint_trig_pwr.OUTPORT_gui_send_tm_mcp   -> OUTPORT_gui_send_tm_mcp;
end Msp430_Obc.final;

system DeploymentView
end DeploymentView;

system implementation DeploymentView.final
subcomponents
   X86_Ground_Station : process X86_Ground_Station.final;
   Msp430_Obc         : process Msp430_Obc.final;
   Node_1_p1 : processor Node_1_Board.final;
   Node_2_p1 : processor Node_2_Board.final;
   bus_1 : bus ocarina_buses::serial.minimal;
   
   node_1_serial                        : device deploymentview::dv::node_1::serial.others
      {
         Source_Text      => ("../DriversConfig/x86_ground_station/DeviceConfig-node_1-serial.c");
         Type_Source_Name => "pohidrv_node_1_serial";
      };
   node_2_msp430_eusci_a_serial_minimal : device deploymentview::dv::node_2::msp430_eusci_a_serial_minimal.others
      {
         Source_Text      => ("../DriversConfig/msp430_obc/DeviceConfig-node_2-msp430_eusci_a_serial_minimal.c");
         Type_Source_Name => "pohidrv_node_2_msp430_eusci_a_serial_minimal";
      };
connections
   x86_ground_station_state_handler_entrypoint_trig_aoi : port x86_ground_station.OUTPORT_state_handler_entrypoint_trig_aoi -> msp430_obc.INPORT_trig_aoi;
   x86_ground_station_state_handler_entrypoint_trig_mcp : port x86_ground_station.OUTPORT_state_handler_entrypoint_trig_mcp -> msp430_obc.INPORT_trig_mcp;
   x86_ground_station_state_handler_entrypoint_trig_pwr : port x86_ground_station.OUTPORT_state_handler_entrypoint_trig_pwr -> msp430_obc.INPORT_trig_pwr;
   msp430_obc_gui_send_tm_aoi                           : port msp430_obc.OUTPORT_gui_send_tm_aoi                           -> x86_ground_station.INPORT_send_tm_aoi;
   msp430_obc_gui_send_tm_mcp                           : port msp430_obc.OUTPORT_gui_send_tm_mcp                           -> x86_ground_station.INPORT_send_tm_mcp;
   bus access bus_1 -> node_1_serial.link;
   bus access bus_1 -> node_2_msp430_eusci_a_serial_minimal.link;
properties
   Actual_Processor_Binding => (reference (Node_1_p1)) applies to X86_Ground_Station;
   Actual_Processor_Binding => (reference (Node_2_p1)) applies to Msp430_Obc;
   Actual_Processor_Binding => (reference (Node_1_p1)) applies to node_1_serial;
   Actual_Processor_Binding => (reference (Node_2_p1)) applies to node_2_msp430_eusci_a_serial_minimal;
   Actual_Connection_Binding => (reference (bus_1)) applies to msp430_obc_gui_send_tm_aoi;
   Actual_Connection_Binding => (reference (bus_1)) applies to msp430_obc_gui_send_tm_mcp;
   Actual_Connection_Binding => (reference (bus_1)) applies to x86_ground_station_state_handler_entrypoint_trig_aoi;
   Actual_Connection_Binding => (reference (bus_1)) applies to x86_ground_station_state_handler_entrypoint_trig_mcp;
   Actual_Connection_Binding => (reference (bus_1)) applies to x86_ground_station_state_handler_entrypoint_trig_pwr;
--  patchable area (do not remove this line):
end DeploymentView.final;

end Process_Package;

-- deploymenttview.final
