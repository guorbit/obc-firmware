// Body file for function PWM_driver
// Generated by TASTE on 2023-02-28 19:17:07
// You can edit this file, it will not be overwritten
// Provided interfaces : pwm_capture, pwm_files, pwm_idle
// Required interfaces : 
// User-defined properties for this function:
//   |_ Taste::Startup_Priority = 1
// Timers              : 

#include "pwm_driver.h"
#include "pwm_driver_state.h"
//#include <iostream>

// Define and use function state inside this context structure
// avoid defining global/static variable elsewhere
pwm_driver_state ctxt_pwm_driver;


void pwm_driver_startup(void)
{
   // Write your initialisation code, but DO NOT CALL REQUIRED INTERFACES
   // std::cout << "[PWM_driver] Startup" << std::endl;
}

void pwm_driver_PI_pwm_capture(void)
{
   // Write your code here
    pwm.set_duty_cycle(...);
}


void pwm_driver_PI_pwm_files(void)
{
   // Write your code here
}


void pwm_driver_PI_pwm_idle(void)
{
   // Write your code here
}


