/* CIF PROCESS (250, 150), (150, 75) */
process Hal;
    /* CIF Keep Specific Geode Partition 'default' */
    /* CIF TEXT (50, 7), (267, 140) */
    -- Text area for declarations and comments
    
    dcl alt_rate Altitude_m := 5.0;
    dcl alt_idx Altitude_m;
    /* CIF ENDTEXT */
    /* CIF procedure (330, 265), (98, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    procedure Get_Altitude;
        /* CIF Keep Specific Geode Partition 'default' */
        /* CIF TEXT (0, 0), (210, 140) */
        fpar
           in/out Altitude_M Altitude_M;
        /* CIF ENDTEXT */
        /* CIF START (316, 6), (70, 35) */
        START;
            /* CIF task (279, 61), (143, 35) */
            task altitude_m := 1000.0;
            /* CIF PROCEDURECALL (249, 116), (203, 35) */
            call writeln("Altitude", altitude_m);
            /* CIF return (333, 166), (35, 35) */
            return ;
    endprocedure;
    /* CIF procedure (341, 205), (72, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    procedure Get_Gps;
        /* CIF Keep Specific Geode Partition 'default' */
        /* CIF TEXT (0, 0), (206, 140) */
        fpar
           in/out Lat Latitude_Wgs84,
           in/out Lon Longitude_Wgs84;
        /* CIF ENDTEXT */
        /* CIF START (284, 13), (70, 35) */
        START;
            /* CIF task (282, 68), (72, 35) */
            task lat := 0.0;
            /* CIF task (280, 123), (76, 35) */
            task lon := 0.0;
            /* CIF return (301, 173), (35, 35) */
            return ;
    endprocedure;
    /* CIF procedure (344, 147), (70, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    procedure Set_Led;
        /* CIF Keep Specific Geode Partition 'default' */
        /* CIF TEXT (0, 0), (170, 140) */
        fpar
           in Val T_Boolean;
        /* CIF ENDTEXT */
        /* CIF START (369, 10), (70, 35) */
        START;
            /* CIF decision (369, 65), (70, 50) */
            decision val;
                /* CIF ANSWER (478, 135), (70, 23) */
                (false):
                    /* CIF PROCEDURECALL (447, 178), (130, 35) */
                    call writeln("LED off");
                /* CIF ANSWER (265, 135), (70, 23) */
                (true):
                    /* CIF PROCEDURECALL (236, 178), (127, 35) */
                    call writeln("LED on");
            enddecision;
            /* CIF return (386, 229), (35, 35) */
            return ;
    endprocedure;
    /* CIF START (349, 11), (70, 35) */
    START;
        /* CIF NEXTSTATE (349, 61), (70, 35) */
        NEXTSTATE Wait;
    /* CIF state (556, 9), (70, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    state Wait;
        /* CIF input (546, 64), (76, 35) */
        input blink_led;
            /* CIF PROCEDURECALL (527, 119), (115, 35) */
            call writeln("blink");
            /* CIF NEXTSTATE (550, 169), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (1029, 8), (70, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    state Wait;
        /* CIF input (1010, 63), (95, 35) */
        input get_altitude;
            /* CIF NEXTSTATE (1023, 118), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (872, 9), (70, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    state Wait;
        /* CIF input (865, 64), (70, 35) */
        input get_gps;
            /* CIF NEXTSTATE (866, 119), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (710, 8), (70, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    state Wait;
        /* CIF input (710, 63), (70, 35) */
        input set_led;
            /* CIF NEXTSTATE (710, 118), (70, 35) */
            NEXTSTATE Wait;
    endstate;
endprocess Hal;