/* CIF PROCESS (292, 103), (150, 75) */
process Eps_Mode_Tracker;
    /* CIF Keep Specific Geode Partition 'default' */
    /* CIF TEXT (309, 0), (282, 140) */
    -- Text area for declarations and comments
    
    dcl eps_mode EPS_Mode_T;
    dcl report EPS_Mode_Status_Report_T;
    
    -- massive thanks to Maxime Perrotin @ ESA
    -- for the architecture / design pattern advice!
    /* CIF ENDTEXT */
    /* CIF procedure (325, 164), (160, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    procedure change_eps_mode_idle;
        /* CIF Keep Specific Geode Partition 'default' */
        /* CIF TEXT (75, 21), (267, 140) */
        -- Text area for declarations and comments
        
        fpar
            in/out Success T_Boolean;
        /* CIF ENDTEXT */
        /* CIF START (523, 42), (70, 35) */
        START;
            /* CIF task (483, 97), (149, 35) */
            task eps_mode := eps_idle;
            /* CIF task (502, 152), (110, 35) */
            task success := true;
            /* CIF task (456, 207), (202, 35) */
            task report.eps_mode := eps_mode;
            /* CIF task (419, 262), (276, 35) */
            task report.eps_last_op := mode_status_change;
            /* CIF return (540, 317), (35, 35) */
            return ;
    endprocedure;
    /* CIF procedure (324, 215), (208, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    procedure change_eps_mode_high_power;
        /* CIF Keep Specific Geode Partition 'default' */
        /* CIF TEXT (75, 21), (267, 140) */
        -- Text area for declarations and comments
        
        fpar
            in/out Success T_Boolean;
        /* CIF ENDTEXT */
        /* CIF START (523, 42), (70, 35) */
        START;
            /* CIF task (459, 97), (197, 35) */
            task eps_mode := eps_high_power;
            /* CIF task (502, 152), (110, 35) */
            task success := true;
            /* CIF task (456, 207), (202, 35) */
            task report.eps_mode := eps_mode;
            /* CIF task (419, 262), (276, 35) */
            task report.eps_last_op := mode_status_change;
            /* CIF return (540, 317), (35, 35) */
            return ;
    endprocedure;
    /* CIF START (599, 160), (70, 35) */
    START;
        /* CIF task (559, 215), (149, 35) */
        task eps_mode := eps_idle;
        /* CIF NEXTSTATE (599, 265), (70, 35) */
        NEXTSTATE Idle;
    /* CIF state (816, 15), (70, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    state Idle;
        /* CIF input (743, 70), (208, 35) */
        input change_eps_mode_high_power;
            /* CIF output (739, 125), (216, 35) */
            output report_eps_mode_status(report);
            /* CIF NEXTSTATE (800, 180), (94, 35) */
            NEXTSTATE High_Power;
    endstate;
    /* CIF state (1065, 13), (94, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    state High_Power;
        /* CIF input (1032, 68), (160, 35) */
        input change_eps_mode_idle;
            /* CIF output (1004, 123), (216, 35) */
            output report_eps_mode_status(report);
            /* CIF NEXTSTATE (1078, 178), (70, 35) */
            NEXTSTATE Idle;
    endstate;
    /* CIF state (820, 298), (70, 35) */
    /* CIF Keep Specific Geode Partition 'default' */
    state *;
        /* CIF input (820, 353), (70, 35) */
        input *;
            /* CIF output (751, 408), (207, 68) */
            output report_eps_mode_status({
  eps_mode eps_mode,
  eps_last_op mode_status_nop
});
            /* CIF NEXTSTATE (820, 496), (70, 35) */
            NEXTSTATE -;
    endstate;
endprocess Eps_Mode_Tracker;